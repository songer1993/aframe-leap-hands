{"dependencies":[{"name":"C:\\Users\\qison\\Google Drive\\projects\\aframe-leap-hands\\package.json","includedInParent":true,"mtime":1530686544578},{"name":"C:\\Users\\qison\\Google Drive\\projects\\aframe-leap-hands\\node_modules\\leapjs\\package.json","includedInParent":true,"mtime":1416419517000},{"name":"./frame","loc":{"line":1,"column":20}},{"name":"./hand","loc":{"line":2,"column":19}},{"name":"./pointable","loc":{"line":3,"column":24}},{"name":"./finger","loc":{"line":4,"column":21}},{"name":"underscore","loc":{"line":5,"column":16}},{"name":"events","loc":{"line":6,"column":27}}],"generated":{"js":"var Frame = require('./frame')\n  , Hand = require('./hand')\n  , Pointable = require('./pointable')\n  , Finger = require('./finger')\n  , _ = require('underscore')\n  , EventEmitter = require('events').EventEmitter;\n\nvar Event = function(data) {\n  this.type = data.type;\n  this.state = data.state;\n};\n\nexports.chooseProtocol = function(header) {\n  var protocol;\n  switch(header.version) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n      protocol = JSONProtocol(header);\n      protocol.sendBackground = function(connection, state) {\n        connection.send(protocol.encode({background: state}));\n      }\n      protocol.sendFocused = function(connection, state) {\n        connection.send(protocol.encode({focused: state}));\n      }\n      protocol.sendOptimizeHMD = function(connection, state) {\n        connection.send(protocol.encode({optimizeHMD: state}));\n      }\n      break;\n    default:\n      throw \"unrecognized version\";\n  }\n  return protocol;\n}\n\nvar JSONProtocol = exports.JSONProtocol = function(header) {\n\n  var protocol = function(frameData) {\n\n    if (frameData.event) {\n\n      return new Event(frameData.event);\n\n    } else {\n\n      protocol.emit('beforeFrameCreated', frameData);\n\n      var frame = new Frame(frameData);\n\n      protocol.emit('afterFrameCreated', frame, frameData);\n\n      return frame;\n\n    }\n\n  };\n\n  protocol.encode = function(message) {\n    return JSON.stringify(message);\n  };\n  protocol.version = header.version;\n  protocol.serviceVersion = header.serviceVersion;\n  protocol.versionLong = 'Version ' + header.version;\n  protocol.type = 'protocol';\n\n  _.extend(protocol, EventEmitter.prototype);\n\n  return protocol;\n};\n\n\n","map":{"mappings":[{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\leapjs\\lib\\protocol.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules\\leapjs\\lib\\protocol.js":"var Frame = require('./frame')\n  , Hand = require('./hand')\n  , Pointable = require('./pointable')\n  , Finger = require('./finger')\n  , _ = require('underscore')\n  , EventEmitter = require('events').EventEmitter;\n\nvar Event = function(data) {\n  this.type = data.type;\n  this.state = data.state;\n};\n\nexports.chooseProtocol = function(header) {\n  var protocol;\n  switch(header.version) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n      protocol = JSONProtocol(header);\n      protocol.sendBackground = function(connection, state) {\n        connection.send(protocol.encode({background: state}));\n      }\n      protocol.sendFocused = function(connection, state) {\n        connection.send(protocol.encode({focused: state}));\n      }\n      protocol.sendOptimizeHMD = function(connection, state) {\n        connection.send(protocol.encode({optimizeHMD: state}));\n      }\n      break;\n    default:\n      throw \"unrecognized version\";\n  }\n  return protocol;\n}\n\nvar JSONProtocol = exports.JSONProtocol = function(header) {\n\n  var protocol = function(frameData) {\n\n    if (frameData.event) {\n\n      return new Event(frameData.event);\n\n    } else {\n\n      protocol.emit('beforeFrameCreated', frameData);\n\n      var frame = new Frame(frameData);\n\n      protocol.emit('afterFrameCreated', frame, frameData);\n\n      return frame;\n\n    }\n\n  };\n\n  protocol.encode = function(message) {\n    return JSON.stringify(message);\n  };\n  protocol.version = header.version;\n  protocol.serviceVersion = header.serviceVersion;\n  protocol.versionLong = 'Version ' + header.version;\n  protocol.type = 'protocol';\n\n  _.extend(protocol, EventEmitter.prototype);\n\n  return protocol;\n};\n\n\n"},"lineCount":75}},"hash":"17579d494f271806789fc8aea0cb611b","cacheData":{"env":{}}}